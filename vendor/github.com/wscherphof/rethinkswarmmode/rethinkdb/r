#!/bin/bash

usage ()
{
    echo
    echo "Usage: $(basename $0) [OPTIONS] [COMMAND] SWARM"
    echo
    echo "Create a RethinkDB cluster on a swarm, and/or start its web admin"
    echo
    echo "Commands:"
    echo "  create"
    echo "    Create the cluster, or recreate (without deleting any data files)"
    echo "    Options:"
    echo "      -n num  number of servers to run on each node (default: 1)"
    echo
    echo "Without command, just start the web admin for the cluster on SWARM"
    echo
}

while getopts "n:h" opt; do
    case $opt in
        n  ) NUM="$OPTARG";;
        h  ) usage; exit;;
        \? ) echo "Unknown option: -$OPTARG" >&2; exit 1;;
        :  ) echo "Missing option argument for -$OPTARG" >&2; exit 1;;
        *  ) echo "Unimplemented option: -$OPTARG" >&2; exit 1;;
    esac
done
shift $((OPTIND -1))

if [ "$1" = "create" ]; then
	CREATE="y"
	ENV="$2"
else
	ENV="$1"
fi

if [ ! "$ENV" ]; then
	usage
	exit 1
fi
NUM="${NUM-1}"

docker-machine ip ${ENV}-manager-1 1>/dev/null
if [ "$?" != "0" ]; then
	exit 1
fi

show ()
{
	$(dirname "$0")/../util/tunnel $ENV 8080 /
}

if [ ! "$CREATE" ]; then
	show
	exit
fi

remove ()
{
	echo "* removing ${!#}..."
	eval $* 2>/dev/null
}

DOCKER="docker-machine ssh ${ENV}-manager-1 sudo docker"
for i in $(seq 0 $NUM)
do
	remove ${DOCKER} service rm db${i}
done
sleep 1
remove ${DOCKER} network rm dbnet
sleep 1
echo "* creating dbnet..."
${DOCKER} network create --driver overlay dbnet

for i in $(seq 0 $NUM)
do
	echo "* creating db${i}data..."
	${DOCKER} volume create --name db${i}data
	echo "* creating db${i}..."
	if [ "$i" = "0" ]; then
		${DOCKER} service create --name db0 --network dbnet --mount src=db0data,dst=/data --publish 8080:8080 rethinkdb
		sleep 10
	else
		${DOCKER} service create --name db${i} --network dbnet --mount src=db${i}data,dst=/data --mode global rethinkdb rethinkdb --join db0 --bind all
	fi
done

echo "* connecting..."
sleep 15
show
