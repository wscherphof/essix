#!/bin/bash

usage ()
{
	echo
	echo "Usage:"
	echo "  $(basename $0) [OPTIONS] build SOURCEDIR IMAGE [SERVICE SWARM]"
	echo "  $(basename $0) [OPTIONS] run IMAGE SERVICE SWARM"
	echo
	echo "Formats & compile go sources, and build a Docker image"
	echo
	echo "SOURCEDIR  directory containing the sources to compile"
	echo "IMAGE      repo/name:tag identifying the image"
	echo "SERVICE    name for the service to run"
	echo "SWARM      name of the swarm where to run the service"
	echo "Specifying SERVICE and SWARM for the build command, will build the image"
	echo "on each of the swarm's nodes - instead of building locally, then pushing"
	echo "to repository - and run the service there with the new image."
	echo
	echo "Options:"
    echo "  -e key=value ...  environment variables"
    echo "  -r replicas       number of replicas to run (default: 1)"
	echo "  -s swarmmode      path to the local github.com/wscherphof/rethinkswarmmode repo (default=$GOPATH/src/github.com/wscherphof/rethinkswarmmode)"
	echo
}

while getopts "e:r:s:h" opt; do
    case $opt in
        e  ) ENVS+=("$OPTARG");;
        r  ) REPLICAS="$OPTARG";;
        s  ) SWARMMODE="$OPTARG";;
        h  ) usage; exit;;
        \? ) echo "Unknown option: -$OPTARG" >&2; exit 1;;
        :  ) echo "Missing option argument for -$OPTARG" >&2; exit 1;;
        *  ) echo "Unimplemented option: -$OPTARG" >&2; exit 1;;
    esac
done
shift $((OPTIND -1))

go get github.com/wscherphof/rethinkswarmmode &>/dev/null
SWARMMODE="${SWARMMODE-${GOPATH}/src/github.com/wscherphof/rethinkswarmmode}"
BUILD="${SWARMMODE}/go/build"
APP="${SWARMMODE}/app"
REPLICAS="${REPLICAS-1}"

run ()
{
    ENVIRONMENT=""
    for env in "${ENVS[@]}"; do
        ENVIRONMENT="${ENVIRONMENT} -e ${env}"
    done
	${APP} -p 80 -p 443 ${ENVIRONMENT} -r ${REPLICAS} ${SERVICE} ${TAG} ${SWARM}
}

COMMAND="$1"
if [ "$COMMAND" = "build" ]; then
	SOURCEDIR="$2"
	TAG="$3"
	SERVICE="$4"
	SWARM="$5"

	ESSIX="$(dirname $0)"
	if [ "$ESSIX" = "." ]; then
		ESSIX="$PWD"
	fi

	continue ()
	{
		if [ "$?" != "0" ]; then
			exit $?
		fi
	}

	pushd "$SOURCEDIR" 1>/dev/null
	continue

	mkdir -p ./.merge/resources
	continue
	cp -rf ${ESSIX}/resources/ ./.merge/resources/
	continue
	cp -rf ./resources/ ./.merge/resources/
	continue

	${BUILD} -p 80 -p 443 -a ./.merge/resources . ${TAG} ${SWARM}

	rm -rf ./.merge 2>/dev/null

	popd 1>/dev/null

	if [ "$SERVICE" -a "$SWARM" ]; then
		run
	fi
elif [ "$COMMAND" = "run" ]; then
	TAG="$2"
	SERVICE="$3"
	SWARM="$4"
	if [ "$TAG" -a "$SERVICE" -a "$SWARM" ]; then
		run
	else
		usage; exit 1
	fi
else
	usage; exit 1
fi
